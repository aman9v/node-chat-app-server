//set up this server to set up the PUBLIC DIRECTORY
const path = require('path');   //built in mod, no need to install
const http = require('http');
const express = require('express');
const socketIO = require('socket.io');

const publicPath = path.join(__dirname, '../public');
const port = process.env.PORT || 3000;
console.log(`__dirname, ../public \n\t ${publicPath}`);

var app = express();
// var server = http.createServer(function(request, response){});//create a server using http library});
var server = http.createServer(app);  //now using the http server INSTEAD of express
//Now set up server to use SOCKET.IO
var io = socketIO(server);    //get back our websockets Server

app.use(express.static(publicPath));
io.on('connection', function(socket){ //reps indiv socket rather than all users connected to the server
  console.log(`\n\nNew User Connected:    ${socket.id}\n`);

  //CUSTOM EVENT method call
    //EMIT: instead of listening to an event, creating an event
  //********REPLACED WITH an io.emit call in socket.on*********
  // socket.emit('newMessage', {
  //   from: "whoMessageisFrom@email.com",
  //   text: "newMessage event emitted from the server when a user connects and listen to it on the client",
  //   createdAt: 123234
  // });

  socket.on('createMessage', function(createdMessage){
    console.log('createMessage', createdMessage);
    //socket.emit --> emits an event to a SINGLE CONNECTION
    //io.emit  --> emits event to EVERY CONNECTION, can DELETE socket.emit methods from server.js(this)
    io.emit('newMessage', { //createdMessage
      from: createdMessage.from,
      text: createdMessage.text,
      createdAt: new Date().getTime() //generated by server to prevent spoofing
    });
  });

  socket.on('disconnect', function(){ //'disconnect' is the event to listen to
    console.log('\n\nClient was DISCONNECTED\n');
  });
});

//app.listen(port, function(){  --> not using the EXPRESS server anymore
server.listen(port, function(){
  console.log(`Connected to Server on PORT ${port}`);
});
